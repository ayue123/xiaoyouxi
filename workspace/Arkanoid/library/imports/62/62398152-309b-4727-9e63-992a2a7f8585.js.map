{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\view/assets\\scripts\\view\\BrickLayout.js"],"names":["cc","Class","extends","Component","properties","padding","spacing","cols","brickPrefab1","Prefab","init","bricksNumber","levelPosition","levelSilveryPosition","node","removeAllChildren","i","j","length","brickNode","instantiate","color","life","a","parent","pos","x","width","y","Math","floor","height","updateBrickSensorTrue","children","beforeNode","_name","collider","getComponent","PhysicsBoxCollider","sensor","apply","updateBrickSensorFalse"],"mappings":"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","file":"BrickLayout.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\view","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        padding: 0,\r\n        spacing: 0,\r\n        cols: 0,\r\n        brickPrefab1: cc.Prefab,\r\n    },\r\n\r\n    //绘制砖块\r\n    init(bricksNumber,levelPosition,levelSilveryPosition) {\r\n\r\n        this.node.removeAllChildren();\r\n        this.bricksNumber = bricksNumber;\r\n        for (let i = 0; i < this.bricksNumber; i++) {\r\n            for(let j = 0; j<levelPosition.length;j++){\r\n                if(i ==levelPosition[j] ){\r\n                    let brickNode = cc.instantiate(this.brickPrefab1);\r\n                    // brickNode.color = cc.color(8,186,255);//浅蓝色\r\n                    // brickNode.color = cc.color(255,255,0);//黄绿\r\n                    // brickNode.color = cc.color(0,255,255);//淡蓝色\r\n                    // brickNode.color = cc.color(0,0,255);//深蓝\r\n                    // brickNode.color = cc.color(255,180,190)//银色\r\n                    if(levelSilveryPosition.length<=0){\r\n                        if(i%4 == 0){\r\n                            //let和var作用域区别：\r\n                            //let块作用域，var在加载时就会提前到最前边，所以可以在块外起作用\r\n                        } else if(i%4 == 1){\r\n                            brickNode.color = cc.color(209,10,247)//紫\r\n                        }else if(i%4 == 2){\r\n                            brickNode.color = cc.color(20,255,10)//绿\r\n                        }else {\r\n                            brickNode.color = cc.color(255,0,0);//红\r\n                        }\r\n                        brickNode.life = 1;\r\n                    }else{\r\n                        for(let a=0;a<levelSilveryPosition.length;a++){\r\n                            if(i==levelSilveryPosition[a]){\r\n                                brickNode.color = cc.color(50,100,255);//淡蓝色\r\n                                //设置砖块生命值\r\n                                brickNode.life = 5;\r\n                                break;\r\n                            }else{\r\n                                if(i%4 == 0){\r\n                                    //let和var作用域区别：\r\n                                    //let块作用域，var在加载时就会提前到最前边，所以可以在块外起作用\r\n                                } else if(i%4 == 1){\r\n                                    brickNode.color = cc.color(209,10,247)//紫\r\n                                }else if(i%4 == 2){\r\n                                    brickNode.color = cc.color(20,255,10)//绿\r\n                                }else {\r\n                                    brickNode.color = cc.color(255,0,0);//红\r\n                                }\r\n                                brickNode.life = 1;\r\n                            }\r\n                        }\r\n                    }\r\n                    brickNode.parent = this.node;\r\n                    //设置砖块坐标位置\r\n                    brickNode.pos = levelPosition[j];\r\n\r\n                    brickNode.x = this.padding + (i % this.cols) * (brickNode.width + this.spacing) + brickNode.width / 2;\r\n                    brickNode.y = -this.padding - Math.floor(i / this.cols) * (brickNode.height + this.spacing) - brickNode.height / 2;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //更新砖块为有碰撞回调，无碰撞效果\r\n    updateBrickSensorTrue(){\r\n        for(let i =0;i<this.node.children.length;i++){\r\n            let beforeNode = this.node.children[i];\r\n            if(beforeNode._name == \"Brick\"){\r\n                if(beforeNode.life<5){\r\n                    let collider = beforeNode.getComponent(cc.PhysicsBoxCollider);\r\n                    collider.sensor = true;\r\n                    collider.apply()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //更新砖块为有碰撞回调，有碰撞效果\r\n    updateBrickSensorFalse(){\r\n        for(let i =0;i<this.node.children.length;i++){\r\n            let beforeNode = this.node.children[i];\r\n            if(beforeNode._name == \"Brick\"){\r\n                if(beforeNode.life<5){\r\n                    let collider = beforeNode.getComponent(cc.PhysicsBoxCollider);\r\n                    collider.sensor = false;\r\n                    collider.apply()\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n});"]}