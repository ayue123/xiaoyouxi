{"version":3,"sources":["BrickLayout.js"],"names":["cc","Class","extends","Component","properties","padding","spacing","cols","brickPrefab1","Prefab","init","bricksNumber","levelPosition","levelSilveryPosition","node","removeAllChildren","i","j","length","brickNode","instantiate","color","life","isSilvery","a","parent","pos","x","width","y","Math","floor","height","updateBrickSensorTrue","children","beforeNode","_name","collider","getComponent","PhysicsBoxCollider","sensor","apply","updateBrickSensorFalse"],"mappings":"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","file":"BrickLayout.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\view","sourcesContent":["/*\r\n * @Author: ayue \r\n * @Date: 2019-03-30 20:19:04 \r\n * @Last Modified by:   ayue \r\n * @Last Modified time: 2019-03-30 20:19:04 \r\n */\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        padding: 0,\r\n        spacing: 0,\r\n        cols: 0,\r\n        brickPrefab1: cc.Prefab,\r\n    },\r\n\r\n    //绘制砖块\r\n    init(bricksNumber, levelPosition, levelSilveryPosition) {\r\n\r\n        this.node.removeAllChildren();\r\n        this.bricksNumber = bricksNumber;\r\n        for (let i = 0; i < this.bricksNumber; i++) {\r\n            for (let j = 0; j < levelPosition.length; j++) {\r\n                if (i == levelPosition[j]) {\r\n                    let brickNode = cc.instantiate(this.brickPrefab1);\r\n                    // brickNode.color = cc.color(8,186,255);//浅蓝色\r\n                    // brickNode.color = cc.color(255,255,0);//黄绿\r\n                    // brickNode.color = cc.color(0,255,255);//淡蓝色\r\n                    // brickNode.color = cc.color(0,0,255);//深蓝\r\n                    // brickNode.color = cc.color(255,180,190)//银色\r\n                    if (levelSilveryPosition.length <= 0) {\r\n                        if (i % 4 == 0) {\r\n                            //let和var作用域区别：\r\n                            //let块作用域，var在加载时就会提前到最前边，所以可以在块外起作用\r\n                        } else if (i % 4 == 1) {\r\n                            brickNode.color = cc.color(209, 10, 247)//紫\r\n                        } else if (i % 4 == 2) {\r\n                            brickNode.color = cc.color(20, 255, 10)//绿\r\n                        } else {\r\n                            brickNode.color = cc.color(255, 0, 0);//红\r\n                        }\r\n                        brickNode.life = 1;\r\n                        brickNode.isSilvery = 0;\r\n                    } else {\r\n                        for (let a = 0; a < levelSilveryPosition.length; a++) {\r\n                            if (i == levelSilveryPosition[a]) {\r\n                                brickNode.color = cc.color(50, 100, 255);//淡蓝色\r\n                                //设置砖块生命值\r\n                                brickNode.life = 5;\r\n                                //是否为银色砖块，用于取消物理撞击效果用\r\n                                brickNode.isSilvery = 1;\r\n                                break;\r\n                            } else {\r\n                                if (i % 4 == 0) {\r\n                                    //let和var作用域区别：\r\n                                    //let块作用域，var在加载时就会提前到最前边，所以可以在块外起作用\r\n                                } else if (i % 4 == 1) {\r\n                                    brickNode.color = cc.color(209, 10, 247)//紫\r\n                                } else if (i % 4 == 2) {\r\n                                    brickNode.color = cc.color(20, 255, 10)//绿\r\n                                } else {\r\n                                    brickNode.color = cc.color(255, 0, 0);//红\r\n                                }\r\n                                brickNode.life = 1;\r\n                                brickNode.isSilvery = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                    brickNode.parent = this.node;\r\n                    //设置砖块坐标位置\r\n                    brickNode.pos = levelPosition[j];\r\n\r\n                    brickNode.x = this.padding + (i % this.cols) * (brickNode.width + this.spacing) + brickNode.width / 2;\r\n                    brickNode.y = -this.padding - Math.floor(i / this.cols) * (brickNode.height + this.spacing) - brickNode.height / 2;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //更新砖块为有碰撞回调，无碰撞效果\r\n    updateBrickSensorTrue() {\r\n        for (let i = 0; i < this.node.children.length; i++) {\r\n            let beforeNode = this.node.children[i];\r\n            if (beforeNode._name == \"Brick\") {\r\n                if (beforeNode.isSilvery == 0) {\r\n                    let collider = beforeNode.getComponent(cc.PhysicsBoxCollider);\r\n                    collider.sensor = true;\r\n                    collider.apply()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //更新砖块为有碰撞回调，有碰撞效果\r\n    updateBrickSensorFalse() {\r\n        for (let i = 0; i < this.node.children.length; i++) {\r\n            let beforeNode = this.node.children[i];\r\n            if (beforeNode._name == \"Brick\") {\r\n                if (beforeNode.isSilvery == 0) {\r\n                    let collider = beforeNode.getComponent(cc.PhysicsBoxCollider);\r\n                    collider.sensor = false;\r\n                    collider.apply()\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n});"]}